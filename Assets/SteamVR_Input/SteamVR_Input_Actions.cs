//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Single p_default_SteeringTrigger;
        
        private static SteamVR_Action_Boolean p_default_PointingRayActivate;
        
        private static SteamVR_Action_Boolean p_default_PointingRayDragging;
        
        private static SteamVR_Action_Boolean p_default_SnapLeft;
        
        private static SteamVR_Action_Boolean p_default_SnapRight;
        
        private static SteamVR_Action_Boolean p_default_TimerAction;
        
        private static SteamVR_Action_Boolean p_default_TeleActive;
        
        private static SteamVR_Action_Boolean p_default_TeleConfirm;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Single default_SteeringTrigger
        {
            get
            {
                return SteamVR_Actions.p_default_SteeringTrigger.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_PointingRayActivate
        {
            get
            {
                return SteamVR_Actions.p_default_PointingRayActivate.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_PointingRayDragging
        {
            get
            {
                return SteamVR_Actions.p_default_PointingRayDragging.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapLeft
        {
            get
            {
                return SteamVR_Actions.p_default_SnapLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapRight
        {
            get
            {
                return SteamVR_Actions.p_default_SnapRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TimerAction
        {
            get
            {
                return SteamVR_Actions.p_default_TimerAction.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TeleActive
        {
            get
            {
                return SteamVR_Actions.p_default_TeleActive.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TeleConfirm
        {
            get
            {
                return SteamVR_Actions.p_default_TeleConfirm.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SteeringTrigger,
                    SteamVR_Actions.default_PointingRayActivate,
                    SteamVR_Actions.default_PointingRayDragging,
                    SteamVR_Actions.default_SnapLeft,
                    SteamVR_Actions.default_SnapRight,
                    SteamVR_Actions.default_TimerAction,
                    SteamVR_Actions.default_TeleActive,
                    SteamVR_Actions.default_TeleConfirm,
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SteeringTrigger,
                    SteamVR_Actions.default_PointingRayActivate,
                    SteamVR_Actions.default_PointingRayDragging,
                    SteamVR_Actions.default_SnapLeft,
                    SteamVR_Actions.default_SnapRight,
                    SteamVR_Actions.default_TimerAction,
                    SteamVR_Actions.default_TeleActive,
                    SteamVR_Actions.default_TeleConfirm};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_PointingRayActivate,
                    SteamVR_Actions.default_PointingRayDragging,
                    SteamVR_Actions.default_SnapLeft,
                    SteamVR_Actions.default_SnapRight,
                    SteamVR_Actions.default_TimerAction,
                    SteamVR_Actions.default_TeleActive,
                    SteamVR_Actions.default_TeleConfirm};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_SteeringTrigger};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[0];
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[0];
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_SteeringTrigger,
                    SteamVR_Actions.default_PointingRayActivate,
                    SteamVR_Actions.default_PointingRayDragging,
                    SteamVR_Actions.default_SnapLeft,
                    SteamVR_Actions.default_SnapRight,
                    SteamVR_Actions.default_TimerAction,
                    SteamVR_Actions.default_TeleActive,
                    SteamVR_Actions.default_TeleConfirm};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SteeringTrigger = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/SteeringTrigger")));
            SteamVR_Actions.p_default_PointingRayActivate = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/PointingRayActivate")));
            SteamVR_Actions.p_default_PointingRayDragging = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/PointingRayDragging")));
            SteamVR_Actions.p_default_SnapLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapLeft")));
            SteamVR_Actions.p_default_SnapRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapRight")));
            SteamVR_Actions.p_default_TimerAction = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TimerAction")));
            SteamVR_Actions.p_default_TeleActive = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TeleActive")));
            SteamVR_Actions.p_default_TeleConfirm = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TeleConfirm")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
        }
    }
}
